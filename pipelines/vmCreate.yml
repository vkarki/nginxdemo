
trigger: none

pool:
  vmImage: 'vs2017-win2016'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  
  - job: TerraformPlan
    displayName: Terraform Initialization and Plan

    steps:
    - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
      inputs:
        terraformVersion: 'v0.12.18'

    - task: TerraformCLI@0
      inputs:
        command: 'init'
        workingDirectory: '$(System.DefaultWorkingDirectory)/orchestrate/nginxV2'
        backendType: 'azurerm'
        backendServiceArm: 'serviceconnection'
        backendAzureRmResourceGroupName: 'terraformDemo-rg'
        backendAzureRmStorageAccountName: 'demotfbackend'
        backendAzureRmContainerName: 'tfstate'
        backendAzureRmKey: 'nginxdev.tfstate'

    - task: TerraformCLI@0
      displayName: Terraform Plan
      inputs:
        command: 'plan'
        workingDirectory: '$(System.DefaultWorkingDirectory)/orchestrate/nginxV2'
        environmentServiceName: 'serviceconnection'
        commandOptions: '-var-file ./globalvars/nginxDev.tfvars -out=nginxDev.tfplan'

    - task: CopyFiles@2
      displayName: 'Copy Files to artifact staging directory'
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: '**/nginxDev.tfplan'
        TargetFolder: $(Build.ArtifactStagingDirectory)

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'
    
- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeployVM
    displayName: Deploy Nginx VM
    environment: Dev
    strategy:
      runOnce:
        deploy:
          steps:
          - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
            inputs:
              terraformVersion: 'v0.12.18'

          - task: TerraformCLI@0
            displayName: Terraform Initialization
            inputs:
              command: 'init'
              workingDirectory: '$(System.DefaultWorkingDirectory)/orchestrate/nginx'
              backendType: 'azurerm'
              backendServiceArm: 'serviceconnection'
              backendAzureRmResourceGroupName: 'resourcegroup-tfstate'
              backendAzureRmStorageAccountName: 'terraform0tfstate10'
              backendAzureRmContainerName: 'tfstate'
              backendAzureRmKey: 'nginxdev.tfstate'

          - task: DownloadPipelineArtifact@2
            inputs:
              buildType: 'current'
              artifactName: 'drop'
              itemPattern: '**/*.tfplan'
              targetPath: '$(System.ArtifactsDirectory)'

      
          - task: TerraformCLI@0
            displayName: Terraform Apply
            inputs:
              command: 'apply'
              workingDirectory: $(System.DefaultWorkingDirectory)
              environmentServiceName: 'serviceconnection'
              commandOptions: '$(System.ArtifactsDirectory)/orchestrate/nginxV2/nginxDev.tfplan'
